<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>R on Xu Liu</title>
    <link>https://xliusufe.github.io/tags/r/</link>
    <description>Recent content in R on Xu Liu</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Mon, 06 Apr 2020 21:29:44 +0800</lastBuildDate>
    
	<atom:link href="https://xliusufe.github.io/tags/r/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Configure  VS code to use Python, R and C/C&#43;&#43;</title>
      <link>https://xliusufe.github.io/post/sfs/vscode/</link>
      <pubDate>Mon, 06 Apr 2020 21:29:44 +0800</pubDate>
      
      <guid>https://xliusufe.github.io/post/sfs/vscode/</guid>
      <description>Configure Visual Studio code to use familiar softwares  such as Python, R and C/C++ More details can be found https://code.visualstudio.com/  Configure VS code to use Python   Prerequisites
 VS Code VS Code Python extension Python 3    Install the Python Extension
 install the Python extension for VS Code from the Visual Studio Marketplace. The Python extension is named Python and it&amp;rsquo;s published by Microsoft.</description>
    </item>
    
    <item>
      <title>Embedding R into Jupyter</title>
      <link>https://xliusufe.github.io/post/py/pythonr/</link>
      <pubDate>Sat, 28 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://xliusufe.github.io/post/py/pythonr/</guid>
      <description>How to embed R into Jupyter?  There is a simple way to embed R into Jupyter Notebook.    Suppose you already have installed R and Anacoda with jupyter
  Add the local paths of Anacoda and Python to your system Environment, such as
C:\Program Files\Python37\Scripts\and
C:\ProgramData\Anaconda3\condabin\  On the Console of Rgui or Rstudio, type
install.packages(c(&#39;repr&#39;, &#39;IRdisplay&#39;, &#39;evaluate&#39;, &#39;crayon&#39;, &#39;pbdZMQ&#39;, &#39;devtools&#39;, &#39;uuid&#39;, &#39;digest&#39;))devtools::install_github(&#39;IRkernel/IRkernel&#39;)  Keep typing</description>
    </item>
    
    <item>
      <title>blogdown</title>
      <link>https://xliusufe.github.io/post/sfs/blogdown/</link>
      <pubDate>Fri, 20 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://xliusufe.github.io/post/sfs/blogdown/</guid>
      <description>This is the first blog written by blogdown, and build and published by R studio.
What is the blogdown?   It is an R package that can create websites using R Markdown and Hugo.
  R studio is an Integrated Development Environment with R. Now, it integrates R, git, hugo together, which is very convenient to build, enrich and maintain your website.
  On git/terminal/shell, we type hugo sverver --theme=hyde --buildDrafts to continuously serve our website locally, which makes us to live preview the website locally.</description>
    </item>
    
    <item>
      <title>Contents of R teaching</title>
      <link>https://xliusufe.github.io/post/rp/contents2r/</link>
      <pubDate>Sat, 14 Mar 2020 21:29:44 +0800</pubDate>
      
      <guid>https://xliusufe.github.io/post/rp/contents2r/</guid>
      <description>A short course of R Language
Introduction to R  What is R How to start Getting help Workspace Input and output Packages A short tutorial  Creating dataset  Data structures Data input Annotating Datasets Useful functions  R language  An overview R syntax  R objects  Vectors List Other objects Functions  Preparing data  Combing datasets Transformations Binning data Summarizing functions Data cleaning  Graphics  An overview of R graphics Scatter Plots Plotting time series Bar charts Other Plots  Advanced graphics  Lattice ggplot2  Statistics  Analyzing data Probability distributions Statistical tests Power tests Regression models Logistic regression  Time series analysis  Autocorrelation functions Time series models More examples  R packages  Development through Rstudio project Development through package.</description>
    </item>
    
    <item>
      <title>Introduction to R</title>
      <link>https://xliusufe.github.io/post/rp/introduction2r/</link>
      <pubDate>Sat, 14 Mar 2020 21:29:44 +0800</pubDate>
      
      <guid>https://xliusufe.github.io/post/rp/introduction2r/</guid>
      <description>R tutorial  R tutorial  A short course of R  A course of R More details can be found in Rpubs  R packages  All my R packages called C/C++ to implement inner loop to speed up the computation. Details can be found in Softwares. A tutorial for developing R packages can be found in RPK. It also includes the tutorial for matlab calling C/C++.  R shiny  Calculate large positive integer&amp;rsquo;s factorial.</description>
    </item>
    
    <item>
      <title>Others Calling C/C&#43;&#43;</title>
      <link>https://xliusufe.github.io/post/rp/rpg/</link>
      <pubDate>Sat, 14 Mar 2020 21:29:44 +0800</pubDate>
      
      <guid>https://xliusufe.github.io/post/rp/rpg/</guid>
      <description>Rpk&amp;rsquo;s devolopment  There are many methods to develop a R-pacakge  extension function  An introduction of Writing R Extensions  R call C/C++  Build foo.dll on Windows or foo.so on MacOS/LinuxOS  R CMD SHLIB foo.cExamples  An example in VectProduce.c:  #include &amp;lt;math.h&amp;gt; #include &amp;lt;string.h&amp;gt; #include &amp;#34;Rinternals.h&amp;#34; #include &amp;#34;R_ext/Rdynload.h&amp;#34; #include &amp;lt;R.h&amp;gt; #include &amp;lt;R_ext/Applic.h&amp;gt; void VectProduce(double *A, int *n1_, double *v, int *n2_, double *outMatrix){int i,j,n1, n2;n1 = n1_[0];n2 = n2_[0];for (i=0;i&amp;lt;n1;i++){for(j=0;j&amp;lt;n2;j++)	outMatrix[j*n1+i]=A[i]*v[j];}}static const R_CMethodDef cMethods[] = {{&amp;#34;VectProduce&amp;#34;, (DL_FUNC) &amp;amp;VectProduce, 5},NULL};void R_init_VectProduce(DllInfo *info){R_registerRoutines(info,cMethods,NULL,NULL,NULL);} Or in VectProduce1.</description>
    </item>
    
    <item>
      <title>Softwares</title>
      <link>https://xliusufe.github.io/post/cv/softwares/</link>
      <pubDate>Sat, 14 Mar 2020 21:29:44 +0800</pubDate>
      
      <guid>https://xliusufe.github.io/post/cv/softwares/</guid>
      <description>R packages The Python codes &amp;ldquo;REGS&amp;rdquo; is proposed for sampling from unnormalized densties by the techniques including Wasserstein gradient flows, numerical ODEs, density-ratio estimation and deep neural networks. REGS achieves a fantastic numerical performance on 2D mixtrues of Gaussian distributions with a large number of modes, a small variance, and a large distance between any two modes. &amp;ldquo;REGS&amp;rdquo; is available at https://github.com/xliusufe/REGS. Refer to Feng X., Gao, Y., Huang, J.,</description>
    </item>
    
  </channel>
</rss>
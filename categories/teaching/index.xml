<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Teaching on Xu Liu</title>
    <link>https://xliusufe.github.io/categories/teaching/</link>
    <description>Recent content in Teaching on Xu Liu</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Thu, 07 May 2020 21:29:44 +0800</lastBuildDate>
    
	<atom:link href="https://xliusufe.github.io/categories/teaching/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Sort algorithms</title>
      <link>https://xliusufe.github.io/post/cp/sort/</link>
      <pubDate>Thu, 07 May 2020 21:29:44 +0800</pubDate>
      
      <guid>https://xliusufe.github.io/post/cp/sort/</guid>
      <description>1. Introduction  There are many classic sort algirithms, such as follows.   Their algorithm complexity are different, see below. Mathematically, the complexity of comparison sorting algorithm has lower bound O(n log(n)). See details at LINK  2. Bubble sort   It, sometimes referred to as sinking sort, is a simple sorting algorithm that repeatedly steps through the list, compares adjacent elements and swaps them if they are in the wrong order.</description>
    </item>
    
    <item>
      <title>Contents of C teaching</title>
      <link>https://xliusufe.github.io/post/cp/contents2c/</link>
      <pubDate>Sat, 14 Mar 2020 21:29:44 +0800</pubDate>
      
      <guid>https://xliusufe.github.io/post/cp/contents2c/</guid>
      <description>The course of Computer Programming (C) The contents including Recognize C programs toy examples Data types Data types common errors for beginners and sugar functions Syntax of printf and scanf syntax, toy examples, and common errors Control Flow Syntax of if and switch syntax, toy examples, and common errors Loops syntax of while and for More examples Loops and arrays Arrays Array basics Functions Function basics More examples of function</description>
    </item>
    
    <item>
      <title>Contents of R teaching</title>
      <link>https://xliusufe.github.io/post/rp/contents2r/</link>
      <pubDate>Sat, 14 Mar 2020 21:29:44 +0800</pubDate>
      
      <guid>https://xliusufe.github.io/post/rp/contents2r/</guid>
      <description>A short course of R Language
Introduction to R  What is R How to start Getting help Workspace Input and output Packages A short tutorial  Creating dataset  Data structures Data input Annotating Datasets Useful functions  R language  An overview R syntax  R objects  Vectors List Other objects Functions  Preparing data  Combing datasets Transformations Binning data Summarizing functions Data cleaning  Graphics  An overview of R graphics Scatter Plots Plotting time series Bar charts Other Plots  Advanced graphics  Lattice ggplot2  Statistics  Analyzing data Probability distributions Statistical tests Power tests Regression models Logistic regression  Time series analysis  Autocorrelation functions Time series models More examples  R packages  Development through Rstudio project Development through package.</description>
    </item>
    
    <item>
      <title>Introduction to C</title>
      <link>https://xliusufe.github.io/post/cp/introduction2c/</link>
      <pubDate>Sat, 14 Mar 2020 21:29:44 +0800</pubDate>
      
      <guid>https://xliusufe.github.io/post/cp/introduction2c/</guid>
      <description>Create your first C project Visual Sdutio on Windows OS codeblocks on Windows OS Xcode on Mac OS The course of Computer Programming Computer Programming More details can be found in Rpubs R packages All my R packages called C/C++ to implement inner loops to speed up the computation. Details can be found in Softwares. A tutorial for developing R packages can be found in RPK. It also includes the</description>
    </item>
    
    <item>
      <title>Introduction to R</title>
      <link>https://xliusufe.github.io/post/rp/introduction2r/</link>
      <pubDate>Sat, 14 Mar 2020 21:29:44 +0800</pubDate>
      
      <guid>https://xliusufe.github.io/post/rp/introduction2r/</guid>
      <description>R tutorial  R tutorial  A short course of R  A course of R More details can be found in Rpubs  R packages  All my R packages called C/C++ to implement inner loop to speed up the computation. Details can be found in Softwares. A tutorial for developing R packages can be found in RPK. It also includes the tutorial for matlab calling C/C++.  R shiny  Calculate large positive integer&amp;rsquo;s factorial.</description>
    </item>
    
    <item>
      <title>Others Calling C/C&#43;&#43;</title>
      <link>https://xliusufe.github.io/post/rp/rpg/</link>
      <pubDate>Sat, 14 Mar 2020 21:29:44 +0800</pubDate>
      
      <guid>https://xliusufe.github.io/post/rp/rpg/</guid>
      <description>Rpk&amp;rsquo;s devolopment  There are many methods to develop a R-pacakge  extension function  An introduction of Writing R Extensions  R call C/C++  Build foo.dll on Windows or foo.so on MacOS/LinuxOS  R CMD SHLIB foo.cExamples  An example in VectProduce.c:  #include &amp;lt;math.h&amp;gt; #include &amp;lt;string.h&amp;gt; #include &amp;#34;Rinternals.h&amp;#34; #include &amp;#34;R_ext/Rdynload.h&amp;#34; #include &amp;lt;R.h&amp;gt; #include &amp;lt;R_ext/Applic.h&amp;gt; void VectProduce(double *A, int *n1_, double *v, int *n2_, double *outMatrix){int i,j,n1, n2;n1 = n1_[0];n2 = n2_[0];for (i=0;i&amp;lt;n1;i++){for(j=0;j&amp;lt;n2;j++)	outMatrix[j*n1+i]=A[i]*v[j];}}static const R_CMethodDef cMethods[] = {{&amp;#34;VectProduce&amp;#34;, (DL_FUNC) &amp;amp;VectProduce, 5},NULL};void R_init_VectProduce(DllInfo *info){R_registerRoutines(info,cMethods,NULL,NULL,NULL);} Or in VectProduce1.</description>
    </item>
    
    <item>
      <title>Softwares</title>
      <link>https://xliusufe.github.io/post/cv/softwares/</link>
      <pubDate>Sat, 14 Mar 2020 21:29:44 +0800</pubDate>
      
      <guid>https://xliusufe.github.io/post/cv/softwares/</guid>
      <description>R packages The R-package &amp;ldquo;pqr&amp;rdquo; constructs confidence intervals of the coefficients of high-dimensional quantile regression via the regularized projection score estimation for the treatment effects. &amp;ldquo;pqr&amp;rdquo; is available at https://github.com/xliusufe/pqr. Refer to Feng, X., Huang, J. and Liu, X.* (2020). Regularized projection score estimation of treatment effects in high-dimensional quantile regression. *Statistica Sinica*. The R-package &amp;ldquo;tensorMQR&amp;rdquo; estimates the coefficients as a symmetric tensor for high-dimensional multiresponse quadratic regression models incorporating</description>
    </item>
    
    <item>
      <title>Teaching</title>
      <link>https://xliusufe.github.io/post/cv/teaching/</link>
      <pubDate>Sat, 14 Mar 2020 21:29:44 +0800</pubDate>
      
      <guid>https://xliusufe.github.io/post/cv/teaching/</guid>
      <description>Shanghai University of Finance and Economics STT102480: Mathematical Statistics Spring 2017 Spring 2018 Spring 2021 Spring 2022 STT311240: Advanced Mathematical Statistics Fall 2016 Fall 2017 Fall 2018 Fall 2019 Fall 2020 STT213488: Data analysis and statistical modeling Fall 2017 Fall 2018 Fall 2019 Fall 2020 Fall 2021 STT101828: Computer Programming (C/C++) Spring 2019 Spring 2020 STT310537: Topics on High-dimensional Data Spring 2017 Spring 2018 Fall 2019 Fall 2020 Homepage go</description>
    </item>
    
  </channel>
</rss>